# Generated by Django 4.2.7 on 2025-05-27 12:29

import core.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='endereço de email')),
                ('is_verified', models.BooleanField(default=False, verbose_name='verificado')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
                'verbose_name_plural': 'usuários',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.SlugField(help_text='Nome único para identificar a configuração', max_length=100, unique=True, verbose_name='chave')),
                ('name', models.CharField(help_text='Nome amigável para a configuração', max_length=100, verbose_name='nome')),
                ('value', models.TextField(blank=True, help_text='Valor da configuração', null=True, verbose_name='valor')),
                ('setting_type', models.CharField(choices=[('text', 'Texto'), ('number', 'Número'), ('boolean', 'Verdadeiro/Falso'), ('json', 'JSON'), ('date', 'Data'), ('datetime', 'Data e Hora'), ('email', 'Email'), ('url', 'URL'), ('file', 'Arquivo'), ('image', 'Imagem')], default='text', help_text='Tipo de dado da configuração', max_length=20, verbose_name='tipo')),
                ('description', models.TextField(blank=True, help_text='Descrição detalhada da configuração', null=True, verbose_name='descrição')),
                ('is_public', models.BooleanField(default=True, help_text='Se falso, apenas administradores podem visualizar/editar', verbose_name='público')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
            ],
            options={
                'verbose_name': 'configuração do sistema',
                'verbose_name_plural': 'configurações do sistema',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='telefone')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='data de nascimento')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro'), ('N', 'Prefiro não informar')], max_length=1, null=True, verbose_name='gênero')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='endereço')),
                ('address_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='número')),
                ('address_complement', models.CharField(blank=True, max_length=100, null=True, verbose_name='complemento')),
                ('neighborhood', models.CharField(blank=True, max_length=100, null=True, verbose_name='bairro')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='cidade')),
                ('state', models.CharField(blank=True, max_length=2, null=True, verbose_name='estado')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP')),
                ('country', models.CharField(default='Brasil', max_length=100, verbose_name='país')),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ar-dz', 'Algerian Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('ckb', 'Central Kurdish (Sorani)'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('ig', 'Igbo'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('ky', 'Kyrgyz'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('ms', 'Malay'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('tg', 'Tajik'), ('th', 'Thai'), ('tk', 'Turkmen'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='pt-br', max_length=10, verbose_name='idioma')),
                ('timezone', models.CharField(default='America/Sao_Paulo', max_length=50, verbose_name='fuso horário')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=core.models.user_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'], message='Apenas arquivos de imagem são permitidos (JPG, JPEG, PNG, GIF)')], verbose_name='foto de perfil')),
                ('receive_newsletter', models.BooleanField(default=True, help_text='Deseja receber nossas newsletters e atualizações por email?', verbose_name='receber newsletter')),
                ('email_notifications', models.BooleanField(default=True, help_text='Deseja receber notificações por email?', verbose_name='notificações por email')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'perfil de usuário',
                'verbose_name_plural': 'perfis de usuários',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('password_change', 'Alteração de senha'), ('profile_update', 'Atualização de perfil'), ('user_create', 'Criação de usuário'), ('user_update', 'Atualização de usuário'), ('user_delete', 'Exclusão de usuário'), ('contract_create', 'Criação de contrato'), ('contract_update', 'Atualização de contrato'), ('contract_delete', 'Exclusão de contrato'), ('contract_renew', 'Renovação de contrato'), ('contract_expire', 'Expiração de contrato'), ('document_upload', 'Upload de documento'), ('document_delete', 'Exclusão de documento'), ('notification_sent', 'Notificação enviada'), ('report_generated', 'Relatório gerado'), ('system_event', 'Evento do sistema')], db_index=True, max_length=50, verbose_name='tipo de ação')),
                ('details', models.TextField(blank=True, null=True, verbose_name='detalhes')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, unpack_ipv4=True, verbose_name='endereço IP')),
                ('user_agent', models.TextField(blank=True, help_text='Informações do navegador do usuário', null=True, verbose_name='user agent')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='data e hora')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activity_logs', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'registro de atividade',
                'verbose_name_plural': 'registros de atividades',
                'ordering': ['-timestamp'],
                'get_latest_by': 'timestamp',
            },
        ),
    ]
